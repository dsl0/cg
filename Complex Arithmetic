#include<iostream>
using namespace std;
class Complex
{
int a,b;
public:
Complex() //initializing members
{
a = 0;
b = 0;
}
friend void operator >> (istream &cin, Complex &c)
{
cin >> c.a >> c.b;
}
friend void operator << (ostream &cout, Complex &c)
{
cout << c.a << " + " << c.b << "i"<<endl;
}
Complex operator +(Complex &c)
{
Complex c2;
c2.a = c.a + a;
c2.b = c.b + b;
return c2;
}
Complex operator -(Complex &c)
{
Complex c2;
c2.a = a - c.a;
c2.b = b - c.b;
return c2;
}
Complex operator *(Complex &c)
{
Complex c2;
c2.a = a * c.a - b * c.b;
c2.b = b * c.a + a * c.b;
return c2;
}
void display()
{
cout << a << "+" << b << "i"<<endl;
}
};
int main()
{
Complex c1,c2,c3;
cout << "Enter real and imaginary part of the number 1: ";
cin >> c1;
cout << "Complex number is : " << c1;
cout << "Enter real and imaginary part of the number 2: ";
cin >> c2;
cout << "Complex number is : " << c2;
c3 = c1 + c2; // performing addtion
cout << "Addition is : ";
cout << c3;
cout << endl;
c3 = c1 - c2; //performing subtraction
cout << "Subtraction is : ";
cout << c3;
cout << endl;
cout << "Multiplication is : ";
c3 = c1 * c2; //performing multiplication
cout <<c3;
cout << endl;
return 0;
}
